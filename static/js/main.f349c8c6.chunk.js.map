{"version":3,"sources":["Die.js","App.js","index.js"],"names":["Die","props","styles","backgroundColor","isHeld","color","className","style","onClick","holdDice","value","App","React","useState","allNewDice","dice","setDice","tenzies","setTenzies","count","setCount","generateNewDie","Math","ceil","random","id","nanoid","newDice","i","push","useEffect","allHeld","every","die","firstValue","allSameValue","diceElements","map","oldDice","prevValue","ReactDOM","render","document","getElementById"],"mappings":"mKAEe,SAASA,EAAIC,GAC1B,IAAMC,EAAS,CACbC,gBAAiBF,EAAMG,OAAS,UAAY,QAC5CC,MAAOJ,EAAMG,OAAS,OAAS,SAEjC,OACE,qBAAKE,UAAU,WAAWC,MAAOL,EAAQM,QAASP,EAAMQ,SAAxD,SACE,oBAAIH,UAAU,UAAd,SAAyBL,EAAMS,U,2BCDtB,SAASC,IACtB,MAAwBC,IAAMC,SAASC,KAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BJ,IAAMC,UAAS,GAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,IAAMC,SAAS,GAAzC,mBAAOM,EAAP,KAAcC,EAAd,KAWA,SAASC,IACP,MAAO,CACLX,MAAOY,KAAKC,KAAqB,EAAhBD,KAAKE,UACtBpB,QAAQ,EACRqB,GAAIC,eAIR,SAASZ,IAEP,IADA,IAAMa,EAAU,GACPC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAQE,KAAKR,KAEf,OAAOM,EAtBTf,IAAMkB,WAAU,WACd,IAAMC,EAAUhB,EAAKiB,OAAM,SAACC,GAAD,OAASA,EAAI7B,UAClC8B,EAAanB,EAAK,GAAGL,MACrByB,EAAepB,EAAKiB,OAAM,SAACC,GAAD,OAASA,EAAIvB,QAAUwB,KACnDH,GAAWI,GACbjB,GAAW,KAEZ,CAACH,IA4CJ,IAAMqB,EAAerB,EAAKsB,KAAI,SAACJ,GAAD,OAC5B,cAACjC,EAAD,CAEEU,MAAOuB,EAAIvB,MACXN,OAAQ6B,EAAI7B,OACZK,SAAU,kBAbIgB,EAaWQ,EAAIR,QAZ/BT,GAAQ,SAACsB,GAAD,OACNA,EAAQD,KAAI,SAACJ,GACX,OAAOA,EAAIR,KAAOA,EAAX,2BAAqBQ,GAArB,IAA0B7B,QAAS6B,EAAI7B,SAAW6B,QAH/D,IAAkBR,IAUTQ,EAAIR,OAOb,OACE,iCACGR,GAAW,cAAC,IAAD,IACZ,oBAAIX,UAAU,QAAd,qBACA,oBAAGA,UAAU,eAAb,+CACoC,uBADpC,qEAIA,wCAAWa,KACX,qBAAKb,UAAU,iBAAf,SAAiC8B,IACjC,wBACE9B,UAAU,YACVE,QAAS,WA9CRS,GAOHC,GAAW,GACXF,EAAQF,MAPRE,GAAQ,SAACsB,GAAD,OACNA,EAAQD,KAAI,SAACJ,GACX,OAAOA,EAAI7B,OAAS6B,EAAMZ,UAW3BD,EADAH,EACS,EADS,SAACsB,GAAD,OAAeA,EAAY,KA+BhD,SAOGtB,EAAU,WAAa,YCtFhCuB,IAASC,OAAO,cAAC9B,EAAD,IAAS+B,SAASC,eAAe,W","file":"static/js/main.f349c8c6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Die(props) {\r\n  const styles = {\r\n    backgroundColor: props.isHeld ? \"#D7136D\" : \"white\",\r\n    color: props.isHeld ? \"#fff\" : \"black\",\r\n  };\r\n  return (\r\n    <div className=\"die-face\" style={styles} onClick={props.holdDice}>\r\n      <h2 className=\"die-num\">{props.value}</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Die from \"./Die\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Confetti from \"react-confetti\";\r\n\r\n//track the number of rolls\r\n//save your best time to localStorage\r\n\r\nexport default function App() {\r\n  const [dice, setDice] = React.useState(allNewDice());\r\n  const [tenzies, setTenzies] = React.useState(false);\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const allHeld = dice.every((die) => die.isHeld);\r\n    const firstValue = dice[0].value;\r\n    const allSameValue = dice.every((die) => die.value === firstValue);\r\n    if (allHeld && allSameValue) {\r\n      setTenzies(true);\r\n    }\r\n  }, [dice]);\r\n\r\n  function generateNewDie() {\r\n    return {\r\n      value: Math.ceil(Math.random() * 6),\r\n      isHeld: false,\r\n      id: nanoid(),\r\n    };\r\n  }\r\n\r\n  function allNewDice() {\r\n    const newDice = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      newDice.push(generateNewDie());\r\n    }\r\n    return newDice;\r\n  }\r\n\r\n  function rollDice() {\r\n    if (!tenzies) {\r\n      setDice((oldDice) =>\r\n        oldDice.map((die) => {\r\n          return die.isHeld ? die : generateNewDie();\r\n        })\r\n      );\r\n    } else {\r\n      setTenzies(false);\r\n      setDice(allNewDice());\r\n    }\r\n  }\r\n\r\n  function counter() {\r\n    if (!tenzies) setCount((prevValue) => prevValue + 1);\r\n    else setCount(0);\r\n  }\r\n\r\n  function holdDice(id) {\r\n    setDice((oldDice) =>\r\n      oldDice.map((die) => {\r\n        return die.id === id ? { ...die, isHeld: !die.isHeld } : die;\r\n      })\r\n    );\r\n  }\r\n\r\n  const diceElements = dice.map((die) => (\r\n    <Die\r\n      key={die.id}\r\n      value={die.value}\r\n      isHeld={die.isHeld}\r\n      holdDice={() => holdDice(die.id)}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <main>\r\n      {tenzies && <Confetti />}\r\n      <h1 className=\"title\">Tenzies</h1>\r\n      <p className=\"instructions\">\r\n        Roll until all dice are the same. <br />\r\n        Click each die to freeze it at its current value between rolls.\r\n      </p>\r\n      <p>Score: {count}</p>\r\n      <div className=\"dice-container\">{diceElements}</div>\r\n      <button\r\n        className=\"roll-dice\"\r\n        onClick={() => {\r\n          rollDice();\r\n          counter();\r\n        }}\r\n      >\r\n        {tenzies ? \"New Game\" : \"Roll\"}\r\n      </button>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}